{"version":3,"sources":["Statistics.js","Menu.js","App.js","index.js"],"names":["Statistics","statisticsActive","setStatisticsActive","sec","min","correctCount","wrongCount","sizeField","trStatistics","Array","keys","className","map","column","index","row","onClick","Menu","header","items","active","setActive","cards","cardFruits","cardCars","pairOfCards","SetPairOfCards","setSizeCards","setStyleCards","setplayGameCard","setVolumeCard","volumeCard","setStartTimer","setMatched","setopenCard","setSec","setMin","SetCorrectCount","SetWrongCount","setUpBound","setDownBound","setSelectCard","handleFlip","setGameWin","setResumeGame","resumeGame","setAnime","arrayCategory","arraySizeField","arrayStyle","useState","JSON","parse","localStorage","getItem","categoryCard","setcategoryCard","categoryCardMain","setCategoryCardMain","setsizeField","sizeFieldMain","setSizeFieldMain","styleCard","setStyleCard","liActive","setLiActive","position","setPosition","handleLiActive","newGame","arr","card","push","name","setArrNew","arrStart","setStartAuto","element","requestMethod","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullScreen","call","document","body","resetSittings","toggleSound","React","playGame","setplayGame","volume","setVolume","arrVolumeSound","volumeSound","setVolumeSound","useSound","play","stop","toggleSoundCard","playGameCards","setplayGameCards","volumeSoundCard","setVolumeSoundCard","startAuto","setTimeout","sort","Math","random","twoCards","setTwoCards","arrNew","useEffect","firstCardTimer","secondCardTimer","secondCardIndex","lastIndexOf","secondCard","removedsecond","splice","length","clearInterval","setItem","stringify","e","stopPropagation","style","display","item","styleblock","stylenone","href","value","arrayCategoryIndex","indexOf","category","structureCategories","newarr","slice","arraySizeFieldIndex","arrayStyleIndex","toggleSoundIndex","toggleSoundIndexCard","toggleVolumeIndex","id","App","menuActive","setMenuActive","upBound","downBound","sizeCards","styleCards","openCard","matched","gameWin","playSoundGameWin","window","location","reload","firstmatch","secondmatch","playSoundCorrect","playSoundError","opened","handleClickSoundCard","playGameCard","playGameWin","volumeGameWin","playwin","stopwin","playCorrect","volumeCorrect","playcor","stopcor","playError","volumeError","playerr","stoperr","startTimer","zeroMin","zeroSec","timer","selectCard","upHandler","key","console","log","addEventListener","removeEventListener","anime","flipCard","includes","src","alt","width","backgroundImage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c3d8b60.chunk.js","sourcesContent":["import \"./statistics.css\";\r\n\r\nfunction Statistics({ statisticsActive, setStatisticsActive, sec, min, correctCount, wrongCount, sizeField }) {\r\n    const tableStatistics = ['Номер игрока', 'Размер поля', 'Время', 'Верные шаги', 'Неверные шаги', 'Набранные баллы']\r\n    const trStatistics = [...Array(8).keys()]\r\n\r\n    return (\r\n        <div className={statisticsActive ? 'statistics_active' : 'statistics'}>\r\n            <table >\r\n                <thead>\r\n                    <tr>\r\n                        {tableStatistics.map((column, index) => {\r\n                            return <th key={index}>{column}</th>\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {trStatistics.map((row, index) => {\r\n                        if (index === 0)\r\n                            return <tr key={index}>\r\n                                <td>1</td>\r\n                                <td>{sizeField}</td>\r\n                                <td>{`${min}:${sec}`}</td>\r\n                                <td>{correctCount}</td>\r\n                                <td>{wrongCount}</td>\r\n                                <td>{100 - (sec/2 + wrongCount)}</td>\r\n                            </tr>\r\n                        else return <tr key={index}>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <button className=\"btn-back__stat\" onClick={() => setStatisticsActive(false)}>назад</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statistics;","import React, { useEffect, useState } from \"react\";\r\nimport useSound from 'use-sound';\r\nimport \"./menu.css\";\r\nimport Statistics from \"./Statistics\"\r\n\r\nfunction Menu({ header, items, active, setActive, cards, cardFruits, cardCars, pairOfCards, SetPairOfCards, setSizeCards, setStyleCards, setplayGameCard, setVolumeCard, volumeCard, setStartTimer, setMatched, setopenCard, setSec, setMin, SetCorrectCount, SetWrongCount, setUpBound, setDownBound, setSelectCard, handleFlip, setGameWin, setResumeGame, resumeGame, setAnime, sec, min, correctCount, wrongCount }) {\r\n\r\n    const arrayCategory = ['животные', 'фрукты', 'машины'];\r\n    const arraySizeField = [10, 8, 6, 3];\r\n    const arrayStyle = ['нету', 'пики', 'черви', 'крести', 'бубы'];\r\n\r\n    const [categoryCard, setcategoryCard] = useState(JSON.parse(localStorage.getItem('myCategoryCard')) || arrayCategory[0]);\r\n    const [categoryCardMain, setCategoryCardMain] = useState(JSON.parse(localStorage.getItem('myCategoryMain')) || cards)\r\n\r\n    const [sizeField, setsizeField] = useState(JSON.parse(localStorage.getItem('mySizeField')) || arraySizeField[0]);\r\n    const [sizeFieldMain, setSizeFieldMain] = useState(10);\r\n\r\n    const [styleCard, setStyleCard] = useState(JSON.parse(localStorage.getItem('myStyleCard')) || arrayStyle[0]);\r\n    \r\n    const [statisticsActive, setStatisticsActive] = useState(false);\r\n\r\n    const [liActive, setLiActive] = useState(false);\r\n\r\n    const [position, setPosition] = useState (JSON.parse(localStorage.getItem('myPosition')) || [...Array(20).keys()])\r\n\r\n\r\n    function handleLiActive(index) {\r\n        if (index === 0) {setActive(false); setStartTimer(true)}\r\n        if (index === 1) {newGame()};\r\n        if (index === 2) setLiActive(true);\r\n        if (index === 3) {newGame(); arrStart(); setStartAuto(true)};\r\n        if (index === 4) setStatisticsActive(true)\r\n        if (index === 5) {requestFullScreen(document.body)}\r\n    }\r\n\r\n    function requestFullScreen(element) {\r\n        var requestMethod = element.requestFullScreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || element.msRequestFullScreen;\r\n        if (requestMethod) {\r\n            requestMethod.call(element);\r\n        } \r\n    }\r\n\r\n    function resetSittings () {\r\n        setResumeGame(false)\r\n        setMatched([]);\r\n        setopenCard([]);\r\n        setSec(0); setMin(0);\r\n        SetCorrectCount(0);\r\n        SetWrongCount(0);\r\n        setSelectCard(-1);\r\n    }\r\n\r\n    function handleCategory() {\r\n        let arrayCategoryIndex = arrayCategory.indexOf(categoryCard) + 1\r\n        if (arrayCategoryIndex === 3) {\r\n            arrayCategoryIndex = 0\r\n        }\r\n        setcategoryCard(arrayCategory[arrayCategoryIndex])\r\n        structureCategories(arrayCategory[arrayCategoryIndex])\r\n        if(sizeField === sizeFieldMain) {\r\n            if ((arrayCategoryIndex) === 0) {\r\n                resetSittings();\r\n                const newarr = cards.slice(0, sizeFieldMain)\r\n                return SetPairOfCards([...newarr, ...newarr])\r\n            }\r\n            if ((arrayCategoryIndex) === 1) {\r\n                resetSittings();\r\n                const newarr = cardFruits.slice(0, sizeFieldMain)\r\n                return SetPairOfCards([...newarr, ...newarr])\r\n            }\r\n            if ((arrayCategoryIndex) === 2) {\r\n                resetSittings();\r\n                const newarr = cardCars.slice(0, sizeFieldMain)\r\n                return SetPairOfCards([...newarr, ...newarr])\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    function structureCategories(category) {\r\n        if (category === 'животные') setCategoryCardMain(cards)\r\n        if (category === 'фрукты') setCategoryCardMain(cardFruits)\r\n        if (category === 'машины') setCategoryCardMain(cardCars)\r\n    }\r\n\r\n    function setField() {\r\n        let arraySizeFieldIndex = arraySizeField.indexOf(sizeField) + 1\r\n        if (arraySizeFieldIndex === 4) {\r\n            arraySizeFieldIndex = 0\r\n        }\r\n        setsizeField(arraySizeField[arraySizeFieldIndex])\r\n        setSizeFieldMain(arraySizeField[arraySizeFieldIndex])\r\n            if ((arraySizeFieldIndex) === 1) {\r\n                const newarr = categoryCardMain.slice(0, 8)\r\n                setSizeCards('eight');\r\n                resetSittings();\r\n                setDownBound(11);\r\n                setUpBound(4);\r\n                setPosition([...Array(16).keys()])\r\n                return SetPairOfCards([...newarr, ...newarr])\r\n            }\r\n            if ((arraySizeFieldIndex) === 2) {\r\n                const newarr = categoryCardMain.slice(0, 6)\r\n                setSizeCards('six');\r\n                resetSittings();\r\n                setDownBound(8);\r\n                setUpBound(3);\r\n                setPosition([...Array(12).keys()])\r\n                return SetPairOfCards([...newarr, ...newarr])\r\n            }\r\n            if ((arraySizeFieldIndex) === 0) {\r\n                const newarr = categoryCardMain.slice(0, 10)\r\n                setSizeCards('');\r\n                resetSittings();\r\n                setDownBound(14);\r\n                setUpBound(5);\r\n                setPosition([...Array(20).keys()])\r\n                return SetPairOfCards([...newarr, ...newarr])\r\n            }\r\n            if ((arraySizeFieldIndex) === 3) {\r\n                const newarr = categoryCardMain.slice(0, 3)\r\n                setSizeCards('three');\r\n                resetSittings();\r\n                setDownBound(2);\r\n                setUpBound(3);\r\n                setPosition([...Array(6).keys()])\r\n                return SetPairOfCards([...newarr, ...newarr])\r\n            }\r\n    }\r\n\r\n    function setStyle() {\r\n        let arrayStyleIndex = arrayStyle.indexOf(styleCard) + 1\r\n        if (arrayStyleIndex === 5) {\r\n            arrayStyleIndex = 0\r\n        }\r\n        setStyleCard(arrayStyle[arrayStyleIndex])\r\n        switch (arrayStyleIndex) {\r\n            case 0:\r\n                setStyleCards('')\r\n                break;\r\n            \r\n            case 1:\r\n                setStyleCards('piki')\r\n                break;\r\n\r\n            case 2:\r\n                setStyleCards('chervi')\r\n                break;\r\n\r\n            case 3:\r\n                setStyleCards('kresti') \r\n                break;\r\n\r\n            case 4:\r\n                setStyleCards('bybi')\r\n                break;\r\n            \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const soundUrl = './image/level.mp3';\r\n    const toggleSound = ['Выкл', 'Вкл']\r\n    const [playGame, setplayGame] = React.useState(toggleSound[0]);\r\n    const [volume, setVolume] = useState(0.1);\r\n    const arrVolumeSound = ['10%', '20%', '30%', '40%', '50%', '60%', '70%', '80%', '90%', '100%']\r\n    const [volumeSound, setVolumeSound] = useState(JSON.parse(localStorage.getItem('myVolumeSound')) || arrVolumeSound[0])\r\n    const [play, { stop }] = useSound(soundUrl, {\r\n        playGame,\r\n        volume,\r\n    });\r\n    const handleClickSound = () => {\r\n        let toggleSoundIndex = toggleSound.indexOf(playGame) + 1\r\n        if (toggleSoundIndex === 2) toggleSoundIndex = 0;\r\n        setplayGame(toggleSound[toggleSoundIndex])\r\n        toggleSoundIndex === 0 ? stop() : play()\r\n    };\r\n    const regulateSound = () => {\r\n        let toggleVolumeIndex = arrVolumeSound.indexOf(volumeSound) + 1\r\n        if (toggleVolumeIndex === 10) toggleVolumeIndex = 0;\r\n        volume > 0.9? setVolume(0.1) : setVolume(volume => volume + 0.1)\r\n        setVolumeSound(arrVolumeSound[toggleVolumeIndex])   \r\n    };\r\n    const toggleSoundCard = ['Выкл', 'Вкл']\r\n    const [playGameCards, setplayGameCards] = React.useState(toggleSound[1]);\r\n    const [volumeSoundCard, setVolumeSoundCard] = useState(JSON.parse(localStorage.getItem('myVolumeSoundCard')) || arrVolumeSound[0])\r\n    const handleClickSwitch = () => {\r\n        let toggleSoundIndexCard = toggleSoundCard.indexOf(playGameCards) + 1\r\n        if (toggleSoundIndexCard === 2) toggleSoundIndexCard = 0;\r\n        toggleSoundIndexCard ? setplayGameCard(true) : setplayGameCard(false)\r\n        setplayGameCards(toggleSoundCard[toggleSoundIndexCard])\r\n    };\r\n    const regulateSoundCard = () => {\r\n        let toggleVolumeIndex = arrVolumeSound.indexOf(volumeSoundCard) + 1\r\n        if (toggleVolumeIndex === 10) toggleVolumeIndex = 0;\r\n        volumeCard > 0.9? setVolumeCard(0.1) : setVolumeCard( volumeCard =>  volumeCard + 0.1)\r\n        setVolumeSoundCard(arrVolumeSound[toggleVolumeIndex])   \r\n    };\r\n    const [startAuto, setStartAuto] = useState(false)\r\n\r\n    function newGame() {\r\n        setAnime(true)\r\n        setTimeout(() => {\r\n            setAnime(false)\r\n        },500)\r\n            setActive(false)\r\n            setStartTimer(true)\r\n            setResumeGame(true)\r\n            setMatched([]);\r\n            setopenCard([]);\r\n            setSec(0); setMin(0);\r\n            SetCorrectCount(0);\r\n            SetWrongCount(0);\r\n            setGameWin(false);\r\n            SetPairOfCards(pairOfCards.sort(() => Math.random() - 0.5))\r\n    }\r\n    \r\n\r\n    \r\n    const [twoCards, setTwoCards] = useState([]);\r\n    const [arrNew, setArrNew] = useState([])\r\n    \r\n\r\n    function arrStart () {\r\n            const arr = [];\r\n            pairOfCards.map((card) => {\r\n                arr.push(card.name)\r\n            })\r\n            setArrNew(arr)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let firstCardTimer;\r\n        let secondCardTimer;\r\n        if (startAuto) {\r\n            firstCardTimer = setTimeout(() => {\r\n                let secondCardIndex = arrNew.lastIndexOf(arrNew[position[0]])\r\n                setSelectCard(position[0]);\r\n                handleFlip(position[0]);\r\n                let secondCard = position.lastIndexOf(secondCardIndex)\r\n                let removedsecond = position.splice(secondCard, 1)\r\n                let removedfirst = position.splice(0, 1, removedsecond[0])\r\n            }, 2000)\r\n            secondCardTimer = setTimeout (() => {\r\n                setSelectCard(position[0]);\r\n                handleFlip(position[0]);\r\n                position.splice(0, 1)\r\n                setTwoCards([]);\r\n            }, 2500)\r\n        }\r\n        if (position.length === 0){\r\n            clearInterval(firstCardTimer);\r\n            clearInterval(secondCardTimer);\r\n        }\r\n      }, [startAuto, twoCards]);\r\n\r\n    useEffect(() => {\r\n        \r\n        localStorage.setItem('myCategoryCard', JSON.stringify(categoryCard));\r\n        localStorage.setItem('myCategoryMain', JSON.stringify(categoryCardMain));\r\n        localStorage.setItem('mySizeField', JSON.stringify(sizeField));\r\n        localStorage.setItem('myStyleCard', JSON.stringify(styleCard));\r\n        localStorage.setItem('myPosition', JSON.stringify(position));\r\n        localStorage.setItem('myVolumeSound', JSON.stringify(volumeSound));\r\n        localStorage.setItem('myVolumeSoundCard', JSON.stringify(volumeSoundCard));\r\n\r\n        \r\n        }, [categoryCardMain, sizeField, categoryCard, styleCard, position, volumeSound, volumeSoundCard ]);\r\n\r\n\r\n    return (\r\n        <div className={active ? 'menu active' : 'menu'} onClick={() => setActive(true)}>\r\n            <div className='blur'></div>\r\n            <div className='menu__content' onClick={e => e.stopPropagation()}>\r\n                <div className='menu__header'>{header}</div>\r\n                <ul style={statisticsActive || liActive ? { display: 'none' } : { display: 'flex' }}>\r\n                    {items.map((item, index) =>\r\n                        <li key={item.value} style={resumeGame ? item.styleblock : item.stylenone} onClick={() => handleLiActive(index)}>\r\n                            <a key={item.value} href={item.href}> {item.value}  </a>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n                <Statistics statisticsActive={statisticsActive} setStatisticsActive={setStatisticsActive} sec={sec} min={min} correctCount={correctCount} wrongCount={wrongCount} sizeField={sizeField} />\r\n                <ul className={liActive ? 'settings active' : 'settings'}>\r\n                    <li>Глобальные настройки</li>\r\n                    <ul>\r\n                        <li>Категория <span className=\"settings__value\" onClick={handleCategory}>{categoryCard}</span></li>\r\n                        <li>Размер поля <span className=\"settings__value\" onClick={setField}>{sizeField}</span></li>\r\n                        <li>Рубашка карточек <span className=\"settings__value\"onClick={setStyle}>{styleCard}</span></li>\r\n                    </ul>\r\n\r\n                    <li> Настройки звука</li>\r\n                    <ul>\r\n                        <li onClick={handleClickSound}>Звук игры <span className=\"settings__value\">{playGame}</span></li>\r\n                        <li onClick={handleClickSwitch}>Звук карточек <span className=\"settings__value\">{playGameCards}</span></li>\r\n                        <li onClick={regulateSound}>Громкость игры   <span className=\"settings__value\" >{volumeSound}</span></li>\r\n                        <li onClick={regulateSoundCard}>Громкость карточек <span className=\"settings__value\">{volumeSoundCard}</span></li>\r\n                    </ul>\r\n                    <li className=\"btn-back\" onClick={() => setLiActive(false)}>назад</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;\r\n","import React, { useEffect, useState } from \"react\";\nimport useSound from 'use-sound';\nimport Menu from \"./Menu\"\nimport \"./index.css\";\n\nconst cards = [\n  { name: 'belka', id: '1' },\n  { name: 'ezhik', id: '2' },\n  { name: 'golub', id: '3' },\n  { name: 'krolik', id: '4' },\n  {name: 'lev', id: '5'},\n  {name: 'lvica', id: '6'},\n  {name: 'pesec', id: '7'},\n  {name: 'popugay', id: '8'},\n  {name: 'sova', id: '9'},\n  {name: 'verbljud', id: '10'}\n];\nconst cardCars = [\n  { name: 'zhuk', id: '1' },\n  { name: 'taxi', id: '2' },\n  { name: 'skor', id: '3' },\n  { name: 'pojar', id: '4' },\n  {name: 'kabriolet', id: '5'},\n  {name: 'gruzovik', id: '6'},\n  {name: 'fura', id: '7'},\n  {name: 'evakuator', id: '8'},\n  {name: 'cuper', id: '9'},\n  {name: 'avtomob', id: '10'}\n];\nconst cardFruits = [\n  { name: 'abrikos', id: '1' },\n  { name: 'apelsin', id: '2' },\n  { name: 'apple', id: '3' },\n  { name: 'banan', id: '4' },\n  {name: 'dynja', id: '5'},\n  {name: 'granate', id: '6'},\n  {name: 'grusha', id: '7'},\n  {name: 'klubnika', id: '8'},\n  {name: 'vinograd', id: '9'},\n  {name: 'vishnja', id: '10'}\n];\n\nfunction App() {\n  \n  const items = [{ value: 'Продолжить', href: '#', stylenone: { display: 'none' }, styleblock: { display: 'flex' }}, { value: 'Новая игра', href: '#'}, { value: 'Настройки', href: '#'}, { value: 'Автоигра', href: '#'}, { value: 'Статистика', href: '#'}, { value: 'Во весь экран', href: '#'}]\n  const [menuActive, setMenuActive] = useState(true);\n  const [pairOfCards, SetPairOfCards] = useState(JSON.parse(localStorage.getItem('myPairOfCards')) || [...cards, ...cards])\n  const [upBound, setUpBound] = useState(JSON.parse(localStorage.getItem('myUpBound')) || 5);\n  const [downBound, setDownBound] = useState(JSON.parse(localStorage.getItem('myDownBound')) || 14);\n\n  const [sizeCards, setSizeCards] = useState(JSON.parse(localStorage.getItem('mySizeCards')) || '');\n  const [styleCards, setStyleCards] = useState(JSON.parse(localStorage.getItem('myStyleCards')) || '');\n  const [correctCount, SetCorrectCount] = useState(JSON.parse(localStorage.getItem('myCorrectCount')) || 0);\n  const [wrongCount, SetWrongCount] = useState(JSON.parse(localStorage.getItem('myWrongCount')) || 0);\n\n  const [openCard, setopenCard] = useState([]);\n  const [matched, setMatched] = useState(JSON.parse(localStorage.getItem('myMatched')) || []);\n  const [gameWin, setGameWin] = useState(false);\n  const [resumeGame, setResumeGame] = useState(JSON.parse(localStorage.getItem('myResumeGame')) || false);\n\n  useEffect(() => {\n    if ((pairOfCards.length)/2 === matched.length){\n      setGameWin(true);\n      playSoundGameWin();\n      resetGameSittings();\n    }\n    if (openCard < 2) return;\n    \n    const firstmatch = pairOfCards[openCard[0]];\n    const secondmatch = pairOfCards[openCard[1]];\n    if(secondmatch && firstmatch.id === secondmatch.id){\n      setMatched([...matched, firstmatch.id])\n      SetCorrectCount(correctCount + 1)\n      setTimeout(() => {\n        playSoundCorrect();\n      },200)\n    } else if (secondmatch && firstmatch.id !== secondmatch.id) {\n      SetWrongCount(wrongCount + 1)\n      setTimeout(() => {\n        playSoundError();\n      },200)\n    }\n    if(openCard.length === 2) setTimeout(() => {\n      setopenCard([])\n    }, 400);\n    \n  }, [openCard])\n\n    \n  const handleFlip = (index) => {\n    setopenCard((opened) => [...opened, index])\n    handleClickSoundCard() \n  }\n\n\n  const soundUrlCard = './image/card.mp3';\n  const [playGameCard, setplayGameCard] = useState(true);\n  const [volumeCard, setVolumeCard] = useState(0.1);\n  const [play, {stop}]  = useSound(soundUrlCard, {\n    playGameCard,\n    volumeCard\n  });\n  const handleClickSoundCard = () => {\n    playGameCard? play():stop() \n  };\n\n  const soundGameWin = './image/gamewin.mp3';\n  const [playGameWin, setplayGameWin] = useState(true);\n  const [volumeGameWin, setVolumeGameWin] = useState(0.5);\n  const [playwin, {stopwin}]  = useSound(soundGameWin, {\n    playGameWin,\n    volumeGameWin\n  });\n  const playSoundGameWin = () => {\n    playGameWin? playwin():stopwin() \n  };\n\n  const soundCorrect = './image/correct.mp3';\n  const [playCorrect, setplayCorrect] = useState(true);\n  const [volumeCorrect, setVolumeCorrect] = useState(0.2);\n  const [playcor, {stopcor}]  = useSound(soundCorrect, {\n    playCorrect,\n    volumeCorrect\n  });\n  const playSoundCorrect = () => {\n    playCorrect ? playcor():stopcor() \n  };\n\n  const soundError = './image/error.mp3';\n  const [playError, setplayError] = useState(true);\n  const [volumeError, setVolumeError] = useState(0.2);\n  const [playerr, {stoperr}]  = useSound(soundError, {\n    playError,\n    volumeError\n  });\n  const playSoundError = () => {\n    playError ? playerr():stoperr() \n  };\n\n\n  const [min, setMin] = useState(\n    JSON.parse(localStorage.getItem('myMinInLocalStorage')) || 0);\n  const [sec, setSec] = useState(\n    JSON.parse(localStorage.getItem('mySecInLocalStorage')) || 0);\n  const [startTimer, setStartTimer] = useState(false);\n  let zeroMin = 0;\n  let zeroSec = 0;\n  if(sec > 9) zeroSec = '';\n  if(min > 9) zeroMin = '';\n  \n  useEffect(() => {\n    let timer;\n    if (startTimer) {\n      timer = setTimeout(() => {\n        if (sec === 59) { \n          setSec(0);\n          setMin(min + 1);\n        } else {\n          setSec(sec + 1);\n        }\n      }, 1000);\n    }\n    if(menuActive) clearInterval(timer);\n    if(gameWin) clearInterval(timer);\n  }, [min, sec, startTimer, menuActive]);\n\n  useEffect(() => {\n    localStorage.setItem('mySecInLocalStorage', JSON.stringify(sec));\n    localStorage.setItem('myMinInLocalStorage',  JSON.stringify(min));\n    localStorage.setItem('myCorrectCount', JSON.stringify(correctCount));\n    localStorage.setItem('myWrongCount',  JSON.stringify(wrongCount));\n    localStorage.setItem('myMatched',  JSON.stringify(matched));\n    localStorage.setItem('myPairOfCards',  JSON.stringify(pairOfCards));\n    localStorage.setItem('mySizeCards',  JSON.stringify(sizeCards));\n    localStorage.setItem('myStyleCards',  JSON.stringify(styleCards));\n    localStorage.setItem('myUpBound',  JSON.stringify(upBound));\n    localStorage.setItem('myDownBound',  JSON.stringify(downBound));\n    localStorage.setItem('myResumeGame', JSON.stringify(resumeGame));\n    \n  }, [sec, min, correctCount, wrongCount, matched, pairOfCards, styleCards, upBound, downBound, resumeGame]);\n  \n\n  \n  const [selectCard, setSelectCard] = useState(-1);\n\n    const upHandler = ({ key }) => {\n      if (key === 'ArrowRight') {\n        setSelectCard(selectCard + 1)\n        console.log(selectCard)\n        if (selectCard === (pairOfCards.length - 1)) setSelectCard(0);\n      }\n      if (key === 'ArrowLeft') {\n        setSelectCard(selectCard - 1)\n        if (selectCard === 0) setSelectCard((pairOfCards.length - 1));\n      }\n      if (key === 'ArrowUp') {\n        if (selectCard < upBound) return;\n        setSelectCard(selectCard - upBound)\n      }\n      if (key === 'ArrowDown') {\n        if (selectCard > downBound) return;\n        setSelectCard(selectCard + upBound)\n      }\n      if (key === 'Escape') {\n        setMenuActive(!menuActive)\n      }\n      if (key === 'Control') {\n        handleFlip(selectCard)\n      }\n      \n    };\n\n    useEffect(() => {\n      if (startTimer) {\n        window.addEventListener('keyup', upHandler);\n        return () => {\n          window.removeEventListener('keyup', upHandler);\n        };\n      }\n    }, [selectCard, menuActive]); \n\n\n    function resetGameSittings() {\n      setTimeout(() => {\n      setResumeGame(false)\n      setMatched([]);\n      setopenCard([]);\n      setSec(0); setMin(0);\n      SetCorrectCount(0);\n      SetWrongCount(0);\n      setSelectCard(-1);\n      window.location.reload();\n      }, 2000)\n    }\n    const [anime, setAnime] = useState(false);\n    \n  return  (\n    <div>\n  <div className='app'>\n    <nav>\n      <div className={menuActive ? 'burger-btn active' : 'burger-btn'} onClick={() => setMenuActive(!menuActive)}></div>\n      <span className='timer'>{`${zeroMin}${min}:${zeroSec}${sec}`}</span>\n      <div>Ходы <span className = \"wrong-count\" >{wrongCount}</span>/<span className = \"correct-count\">{correctCount}</span></div>\n    </nav>\n    <Menu active={menuActive} setActive={setMenuActive} header={'Memory Game'} items={items} cards={cards} cardCars={cardCars} cardFruits={cardFruits} setSizeCards={setSizeCards} pairOfCards = {pairOfCards}  SetPairOfCards = {SetPairOfCards} setStyleCards = {setStyleCards} setplayGameCard={setplayGameCard} setVolumeCard = {setVolumeCard} volumeCard = {volumeCard} setStartTimer = {setStartTimer} setMatched = {setMatched} setopenCard = {setopenCard} setSec= {setSec} setMin = {setMin} SetCorrectCount = {SetCorrectCount} SetWrongCount = {SetWrongCount} setUpBound = {setUpBound} setDownBound = {setDownBound} setSelectCard = {setSelectCard} selectCard = {selectCard} handleFlip = {handleFlip} setGameWin = {setGameWin} setResumeGame = {setResumeGame} resumeGame = {resumeGame} setAnime = {setAnime} sec={sec} min={min} correctCount={correctCount} wrongCount={wrongCount}/>\n    <div className={`cards ${sizeCards}`}>\n        {pairOfCards.map((card, index) => {\n          let flipCard ;\n          flipCard = false;\n          \n          if (openCard.includes(index)) flipCard = true;\n          if (matched.includes(card.id)) flipCard = true;\n        \n          return <div className={`card ${flipCard || anime ? 'flipped' : ''}`} key={index} onClick={() => handleFlip(index)}>\n            <div className='inner'>\n              <div className={`front ${selectCard === index ? 'select' : ''}`}>\n                <img className='imgcard' src={`./image/${card.name}.png`} alt={`${card.name}`} width='100' onClick={e => e.stopPropagation()}/>\n              </div>\n              <div className={`back ${selectCard === index ? 'select' : ''}`} style={{backgroundImage: 'url(' + styleCards +'.jpg)'}}></div>\n            </div>\n          </div>\n        })}\n    </div>\n  </div>\n  <div className = 'footer'>\n  <a href=\"https://github.com/Natallia22\">\n  <img className = 'img-git' src='./image/git.png' alt='git'></img> </a>\n  <p className ='text-footer'>2021</p>\n  <a href='https://rs.school/js/'> <img className = 'img-logo' src='https://rs.school/images/rs_school_js.svg' alt='rfh'></img> </a>\n  </div>\n  </div>\n  \n  )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}